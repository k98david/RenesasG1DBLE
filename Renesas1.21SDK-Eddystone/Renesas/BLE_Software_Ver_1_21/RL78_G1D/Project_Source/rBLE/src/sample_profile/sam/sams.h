/*******************************************************************************
 * DISCLAIMER
 * This software is supplied by Renesas Electronics Corporation and is only
 * intended for use with Renesas products. No other uses are authorized. This
 * software is owned by Renesas Electronics Corporation and is protected under
 * all applicable laws, including copyright laws.
 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT
 * LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
 * AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
 * TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS
 * ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE
 * FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR
 * ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE
 * BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 * Renesas reserves the right, without notice, to make changes to this software
 * and to discontinue the availability of this software. By using this software,
 * you agree to the additional terms and conditions found by accessing the
 * following link:
 * http://www.renesas.com/disclaimer
 * (C) 2012-2017 Renesas Electronics Corporation All rights reserved.
 ******************************************************************************/

/******************************************************************************
 * File Name  : sams.h
 *
 * Copyright(C) 2013-2017 Renesas Electronics Corporation
 *
 * This file is generated by Bluetooth Developer Studio plugin.
 *     BDS Version    : 1.1.3139.0
 *     Script Version : 2.0.1
 *
 ******************************************************************************/
#ifndef __SAMS_H__
#define __SAMS_H__

/*******************************************************************************
 * Include Files
 ******************************************************************************/
#include "arch.h"
#include "rble.h"
#include "sam/sam.h"

#define Chr_len 20
/*******************************************************************************
 * Enumeration Definitions
 ******************************************************************************/
#define NEW_PROFILE_SERVER_DESC_ALL_DISABLE (0x0000)

/*******************************************************************************
 * Type Definitions
 ******************************************************************************/
typedef enum {
    NEW_PROFILE_SERVER_EVENT_ENABLE_COMP = 0,
    NEW_PROFILE_SERVER_EVENT_DISABLE_COMP,
    NEW_PROFILE_SERVER_EVENT_SET_VALUE_COMP,
    NEW_PROFILE_SERVER_EVENT_CHAR_WRITE_RESP,
} NEW_PROFILE_SERVER_EVENT_TYPE;

typedef struct {
	uint16_t dummy_cccddi__char_cccd;
} NEW_PROFILE_SERVER_PARAM;

typedef struct {
    NEW_PROFILE_SERVER_EVENT_TYPE type;
    RBLE_STATUS status;
    uint16_t conhdl;
    union {
        struct {
            NEW_PROFILE_SERVER_PARAM param;
        } disable_comp_evt;
        struct {
            uint16_t char_hdl;
        } set_value_comp_evt;
        struct {
            uint16_t char_hdl;
	    uint8_t bs_uid_char_val_len;
	    uint8_t bs_url_char_val_len;
	    uint8_t bs_status_char_val_len;
	    uint8_t bs_cmd_char_val_len;
            union {
				uint8_t bs_N_uid_char_val[Chr_len];
				uint8_t bs_L_uid_char_val[Chr_len];
				uint8_t bs_R_uid_char_val[Chr_len];
				uint8_t bs_N_url_char_val[Chr_len];
				uint8_t bs_L_url_char_val[Chr_len];
				uint8_t bs_R_url_char_val[Chr_len];
				uint8_t bs_Seting_Group_char_val[Chr_len];
				uint8_t bs_cmd_char_val[Chr_len];
            } char_write_resp_evt_val;
        } char_write_resp_evt;
    } param;
} NEW_PROFILE_SERVER_EVENT;

typedef struct {
    uint16_t hdl;
    uint16_t len;
    uint8_t  value[20];
    uint16_t send_ntf_ind;
    BOOL     write_cmd_ind;
} SET_DATA_INFO;

typedef void (*NEW_PROFILE_SERVER_EVENT_HANDLER)(NEW_PROFILE_SERVER_EVENT *event);

/*******************************************************************************
 * Function Declarations (API)
 ******************************************************************************/
RBLE_STATUS NEW_PROFILE_Server_Enable(uint16_t conhdl, uint8_t con_type,
                                 NEW_PROFILE_SERVER_PARAM *param, NEW_PROFILE_SERVER_EVENT_HANDLER callback);
RBLE_STATUS NEW_PROFILE_Server_Disable(uint16_t conhdl);
RBLE_STATUS NEW_PROFILE_Server_Set_Value(uint16_t char_hdl, uint8_t *char_val);
#endif /* __SAMS_H__ */
